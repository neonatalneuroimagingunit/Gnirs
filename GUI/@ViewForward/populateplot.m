function populateplot(obj)

obj.ProbeAxes = axes('Parent', obj.PlotPanel, ...
    'Units', 'normalized', ...
    'NextPlot', 'add', ...
    'Position', [0.1 0.1 0.8 0.8], ...
    'Visible', 'off');

obj.Scalp = trisurf(obj.Atlas.Scalp.face, ...
    obj.Atlas.Scalp.node(:,1), obj.Atlas.Scalp.node(:,2), obj.Atlas.Scalp.node(:,3), ...
    ones(size(obj.Atlas.Scalp.node(:,3))), ...
    'SpecularStrength', 0, ...
    'EdgeColor', 'none', ...
    'FaceColor', [0.7 0.7 0.7], ...
    'FaceAlpha' ,0.3);
obj.GreyMatter = trisurf(obj.Atlas.GreyMatter.face, ...
    obj.Atlas.GreyMatter.node(:,1), obj.Atlas.GreyMatter.node(:,2), obj.Atlas.GreyMatter.node(:,3), ...
    ones(size(obj.Atlas.GreyMatter.node(:,3))), ...
    'SpecularStrength', 0, ...
    'EdgeColor', 'none', ...
    'FaceColor', [0.7 0.2 0], ...
    'FaceAlpha', 0.3);
obj.WhiteMatter = trisurf(obj.Atlas.WhiteMatter.face, ...
    obj.Atlas.WhiteMatter.node(:,1), obj.Atlas.WhiteMatter.node(:,2), obj.Atlas.WhiteMatter.node(:,3), ...
    ones(size(obj.Atlas.WhiteMatter.node(:,3))), ...
    'SpecularStrength', 0, ...
    'EdgeColor', 'none', ...
    'FaceColor', [0 0.2 0.2], ...
    'FaceAlpha', 0.3);

obj.Light1 = light('Position',[100 0 100]);     % x is left->right, y is back->front
obj.Light2 = light('Position',[-100 0 100]);

axis equal
axis off
axis vis3d

obj.SourceOptode = plot3(...
    [obj.Probe.source.position(:,1) obj.Probe.source.position(:,1)]', ...
    [obj.Probe.source.position(:,2) obj.Probe.source.position(:,2)]', ...
    [obj.Probe.source.position(:,3) obj.Probe.source.position(:,3)]', ...
    'Marker', '.', ...
    'MarkerSize', 20, ...
    'Color', [0.2 0 0], ...
    'LineStyle', 'none', ...
    'Parent', obj.ProbeAxes);
obj.DetectorOptode = plot3(...
    [obj.Probe.detector.position(:,1) obj.Probe.detector.position(:,1)]', ...
    [obj.Probe.detector.position(:,2) obj.Probe.detector.position(:,2)]', ...
    [obj.Probe.detector.position(:,3) obj.Probe.detector.position(:,3)]', ...
    'Marker', '.', ...
    'MarkerSize', 20, ...
    'Color', [0 0 0.2], ...
    'LineStyle', 'none', ...
    'Parent', obj.ProbeAxes);

nSrc = size(obj.Forward.src,1);
nDet = size(obj.Forward.det,1);
obj.SrcDirectionArrow = gobjects(nSrc,1);
obj.DetDirectionArrow = gobjects(nDet,1);
for iSrc = 1:1:nSrc
    obj.SrcDirectionArrow(iSrc) = frecciona2(obj.Forward.src(iSrc,:), obj.Forward.src(iSrc,:)+10*obj.Forward.srcDir(iSrc,:),'Size',[20 0.3],'Color',[0.2 0 0]);
end
for iDet = 1:1:nDet
    obj.DetDirectionArrow(iDet) = frecciona2(obj.Forward.det(iDet,:), obj.Forward.det(iDet,:)+10*obj.Forward.detDir(iDet,:),'Size',[20 0.3],'Color',[0 0 0.2]);
end
set(obj.SrcDirectionArrow, 'Visible', 'off');
set(obj.DetDirectionArrow, 'Visible', 'off');

obj.Sensitivity = scatter3(0,0,0, 'Visible', 'off');
end
