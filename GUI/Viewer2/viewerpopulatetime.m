function viewerpopulatetime(~, eventData, GHandle, vIdx, viewerC)

foregroundColor = viewerC.foregroundColor;
eventColor = lines(size(viewerC.Event.Dictionary,1));
eventRatio = 0.8;
showEvents = {'off', 'on'};

Probe =  viewerC.Probe;
Data = eventData.AffectedObject.time2Plot;
lineLabels = Data.Properties.VariableNames(2:end);

nLines = size(Data,2) - 1; % one is the time column

cla(GHandle.Viewer(vIdx).PlotPanel.Time.MainAxes);
cla(GHandle.Viewer(vIdx).PlotPanel.Time.SmallAxes);

%% Plot events
yMax = GHandle.Viewer(vIdx).PlotPanel.Time.MainAxes.YLim(2);
nEventType = size(viewerC.Event.Dictionary,1);
for iEventType = 1 : nEventType
    eventMask = viewerC.Event.type == iEventType;
    GHandle.Viewer(vIdx).PlotPanel.Time.Events(iEventType) = stem(GHandle.Viewer(vIdx).PlotPanel.Time.MainAxes,...
        viewerC.Event.startTime(eventMask), eventRatio.*yMax.*ones(size(viewerC.Event.startTime(eventMask))),...
        'Color', eventColor(iEventType,:), ...
        'Marker', '.', ...
        'MarkerSize', 30, ...
        'ShowBaseLine', 'off', ...
        'Visible', showEvents{GHandle.Viewer(vIdx).PreferencePanel.ShowEvent.Value + 1}, ...
        'LineWidth', 2);
end

%% Plot lines in main and support axes
for iLines = 1 : nLines
    GHandle.Viewer(vIdx).PlotPanel.Time.Lines(iLines) = plot(Data{:,1}, Data{:, iLines + 1},...
        'LineWidth', 1, 'LineStyle', '-',...
        'buttonDownFcn', {@line_callback , GHandle, vIdx},...
        'Color', GHandle.Viewer(vIdx).WatchList.colorLine(iLines,:),...
        'DisplayName', lineLabels{iLines},...
        'Tag', lineLabels{iLines},...
        'Parent', GHandle.Viewer(vIdx).PlotPanel.Time.MainAxes);
    
    GHandle.Viewer(vIdx).PlotPanel.Time.SmallLines(iLines) = plot(Data{:,1}, Data{:, iLines + 1},...
        'LineWidth', 1, 'LineStyle', '-',...
        'Color', GHandle.Viewer(vIdx).WatchList.colorLine(iLines,:),...
        'HitTest', 'off',...
        'Parent', GHandle.Viewer(vIdx).PlotPanel.Time.SmallAxes);
end
GHandle.Viewer(vIdx).PlotPanel.Time.Lines((nLines+1):end) = [];
GHandle.Viewer(vIdx).PlotPanel.Time.SmallLines((nLines+1):end) = [];

%% Resize event height
yVal = GHandle.Viewer(vIdx).PlotPanel.Time.MainAxes.YLim(2);
for iEvents = 1:1:nEventType
    GHandle.Viewer(vIdx).PlotPanel.Time.Events(iEvents).YData = ...
        eventRatio.*max(yVal).*ones( [1, length(GHandle.Viewer(vIdx).PlotPanel.Time.Events(iEvents).XData)]);
end
%% Set axes properties
GHandle.Viewer(vIdx).PlotPanel.Time.MainAxes.YAxis.Exponent = 0;
GHandle.Viewer(vIdx).PlotPanel.Time.MainAxes.XLabel.String = 'Time (s)';
GHandle.Viewer(vIdx).PlotPanel.Time.MainAxes.YLabel.String = 'Intensity (a.u.)';

GHandle.Viewer(vIdx).PlotPanel.Time.SupportAxes.XLabel.String = 'Time (samples)';
GHandle.Viewer(vIdx).PlotPanel.Time.SupportAxes.YTickLabel = [];
GHandle.Viewer(vIdx).PlotPanel.Time.SupportAxes.XLim = [1 size(Data,1)];

%% Create stuff in support axes
GHandle.Viewer(vIdx).PlotPanel.Time.Rectangle = rectangle(...
    'Parent', GHandle.Viewer(vIdx).PlotPanel.Time.SmallAxes,...
    'Curvature', [0 0], 'EdgeColor', foregroundColor,...
    'HitTest', 'off');

GHandle.Viewer(vIdx).PlotPanel.Time.TxtSeconds = text(0, 0, '',...
    'HorizontalAlignment', 'center',...
    'FontWeight', 'bold',...
    'Color', foregroundColor, ...
    'HitTest', 'off',...
    'FontSize', 8,...
    'Parent', GHandle.Viewer(vIdx).PlotPanel.Time.SmallAxes);

GHandle.Viewer(vIdx).PlotPanel.Time.TxtSamples = text(0, 0, '',...
    'HorizontalAlignment', 'center',...
    'FontWeight', 'bold',...
    'Color', foregroundColor, ...
    'HitTest', 'off',...
    'FontSize', 8,...
    'Parent', GHandle.Viewer(vIdx).PlotPanel.Time.SmallAxes);


%% Channel table
srcIdx = zeros(nLines,1);
detIdx = zeros(nLines,1);
detLabel = zeros(nLines,1);
srcLabel = zeros(nLines,1);
waveLength = zeros(nLines,1);
distance = zeros(nLines,1);

if ~isempty(Probe)
    for iLines = 1:1:nLines
        srcIdx(iLines) = str2double(lineLabels{iLines}(11:13));
        detIdx(iLines) = str2double(lineLabels{iLines}(16:18));
        waveLength(iLines) = str2double(lineLabels{iLines}(6:8));
        srcLabel(iLines) = srcIdx(iLines);
        detLabel(iLines) = detIdx(iLines);
    end
    distance =  vecnorm((Probe.source.position(srcIdx,:)-Probe.detector.position(detIdx,:)),2,2);
end

GHandle.Viewer(vIdx).DataPanel.TrackTable.Data = [...
    num2cell(srcLabel), ...
    num2cell(detLabel),...
    num2cell(waveLength),...
    num2cell(distance),...
    lineLabels', ...
    ];

%% Event table
GHandle.Viewer(vIdx).DataPanel.EventTable.Data = [...
    viewerC.Event.Dictionary(viewerC.Event.type,2), ...
    viewerC.Event.Dictionary(viewerC.Event.type,1), ...
    num2cell(viewerC.Event.startTime), ...
    num2cell(viewerC.Event.durationTime), ...
    ];GHandle.Viewer(vIdx).WatchList.timeLim = [viewerC.Data.Time.Time(1),...
    viewerC.Data.Time.Time(end)];

if isempty(GHandle.Viewer(vIdx).WatchList.edvLine)
    GHandle.Viewer(vIdx).WatchList.edvLine = true(size(GHandle.Viewer(vIdx).PlotPanel.Time.SmallLines));
else
    GHandle.Viewer(vIdx).WatchList.edvLine = GHandle.Viewer(vIdx).WatchList.edvLine;
end
end

function line_callback(hObject, ~, GHandle, vIdx)
lineIdx = GHandle.Viewer(vIdx).PlotPanel.Time.Lines == hObject;
if lineIdx == GHandle.Viewer(vIdx).WatchList.edvLine
    GHandle.Viewer(vIdx).WatchList.edvLine = true(size(GHandle.Viewer(vIdx).WatchList.edvLine));
else
    GHandle.Viewer(vIdx).WatchList.edvLine = lineIdx;
end

end
