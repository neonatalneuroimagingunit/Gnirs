function tempplotfunc(GHandle)
landmarkColor = GHandle.Preference.Theme.landmarkColor;

sourceColor = [1 0 0];
detectorColor = [0 0 1];

Atlas =  GHandle.TempWindow.SelectedAtlas;
idxLM = GHandle.TempWindow.Mask.LandMark(:);
idxSrc = GHandle.TempWindow.Mask.Source(:);
idxDet = GHandle.TempWindow.Mask.Detector(:);
x = reshape(Atlas.LandMarks.coord(:,:,1), [],1);
y = reshape(Atlas.LandMarks.coord(:,:,2), [],1);
z = reshape(Atlas.LandMarks.coord(:,:,3), [],1);

scalpMask = GHandle.TempWindow.NewProbeAxes.Children == GHandle.TempWindow.Scalp;

delete(GHandle.TempWindow.NewProbeAxes.Children(~scalpMask))

GHandle.TempWindow.LandMark = plot3(...
    x(idxLM), y(idxLM), z(idxLM), ...
    'MarkerSize',20, ...
    'ButtonDownFcn',{@(Handle,Evnt)landmarkcallback(Handle,Evnt,GHandle)}, ...
    'LineStyle', 'none', ...
    'Visible', 'on', ...
    'Marker','.', ...
    'Color',landmarkColor, ...
    'Parent', GHandle.TempWindow.NewProbeAxes);


GHandle.TempWindow.Source = plot3(...
    x(idxSrc), y(idxSrc), z(idxSrc), ...
    'MarkerSize',20, ...
    'ButtonDownFcn',{@(Handle,Evnt)landmarkcallback(Handle,Evnt,GHandle)}, ...
    'LineStyle', 'none', ...
    'Visible', 'on', ...
    'Marker','.', ...
    'Color',sourceColor, ...
    'Parent', GHandle.TempWindow.NewProbeAxes);

GHandle.TempWindow.Detector = plot3(...
    x(idxDet), y(idxDet), z(idxDet), ...
    'MarkerSize',20, ...
    'ButtonDownFcn',{@(Handle,Evnt)landmarkcallback(Handle,Evnt,GHandle)}, ...
    'LineStyle', 'none', ...
    'Visible', 'on', ...
    'Marker','.', ...
    'Color',detectorColor, ...
    'Parent', GHandle.TempWindow.NewProbeAxes);



lineShrinkFactor = 0.85; % between 0.5 (no line) and 1 (point to point)

sourceColor = [1 0 0];
detectorColor = [0 0 1];


sourceTag = GHandle.TempWindow.SelectedAtlas.LandMarks.names(GHandle.TempWindow.Mask.Source);
sourcePos = reshape(GHandle.TempWindow.SelectedAtlas.LandMarks.coord(repmat(GHandle.TempWindow.Mask.Source,1,1,3)),[],3);
GHandle.TempWindow.SourceList.String = sourceTag;
detectorTag = GHandle.TempWindow.SelectedAtlas.LandMarks.names(GHandle.TempWindow.Mask.Detector);
detectorPos = reshape(GHandle.TempWindow.SelectedAtlas.LandMarks.coord(repmat(GHandle.TempWindow.Mask.Detector,1,1,3)),[],3);
GHandle.TempWindow.DetectorList.String = detectorTag;

GHandle.TempWindow.ChannelList.Data = {};

nSource = size(sourceTag,1);
nDetector = size(detectorTag,1);

channelPairsIdx = combvec(1:nSource, 1:nDetector)';
nChannel = size(channelPairsIdx,1);




thresholdDistance = str2double(GHandle.TempWindow.ThresholdDistance.String);

for iChannel = 1:1:nChannel
    tempCoordSource = sourcePos(channelPairsIdx(iChannel,1),:);
    tempCoordDetector = detectorPos(channelPairsIdx(iChannel,2),:);
    tempChannelDistance = norm(tempCoordSource-tempCoordDetector);
    
    GHandle.TempWindow.ChannelList.Data{iChannel,1} = ['Ch' num2str(iChannel)];
    GHandle.TempWindow.ChannelList.Data{iChannel,2} = sourceTag{channelPairsIdx(iChannel,1)};
    GHandle.TempWindow.ChannelList.Data{iChannel,3} = detectorTag{channelPairsIdx(iChannel,2)};
    GHandle.TempWindow.ChannelList.Data{iChannel,4} = tempChannelDistance;
    GHandle.TempWindow.ChannelList.Data{iChannel,5} = tempChannelDistance <= thresholdDistance;
end

if  GHandle.TempWindow.LandmarkLabels.Value
    GHandle.TempWindow.Source = text(sourcePos(:,1),...
        sourcePos(:,2),...
        sourcePos(:,3),...
        sourceTag, ...
        'FontWeight', 'bold', ...
        'FontSize', 10, ...
        'HitTest', 'off', ...
        'Color', sourceColor);
    GHandle.TempWindow.Detector = text(detectorPos(:,1),...
        detectorPos(:,2),...
        detectorPos(:,3),...
        detectorTag, ...
        'FontWeight', 'bold', ...
        'FontSize', 10, ...
        'HitTest', 'off', ...
        'Color', detectorColor);
    if nChannel
        coordChannel = (sourcePos(channelPairsIdx(:,1),:) + detectorPos(channelPairsIdx(:,2),:))/2;
        GHandle.TempWindow.ChannelText = text(coordChannel(:,1), coordChannel(:,2), coordChannel(:,3), ...
            GHandle.TempWindow.ChannelList.Data(:,1), ...
            'FontWeight', 'bold', ...
            'FontSize', 10, ...
            'HitTest', 'off', ...
            'Color', 'k');
    end
end

if nChannel
    tempCoordSourceShrink = sourcePos(channelPairsIdx(:,1),:) - (sourcePos(channelPairsIdx(:,1),:)-detectorPos(channelPairsIdx(:,2),:))*lineShrinkFactor;
    tempCoordDetectorShrink = detectorPos(channelPairsIdx(:,2),:) + (sourcePos(channelPairsIdx(:,1),:)-detectorPos(channelPairsIdx(:,2),:))*lineShrinkFactor;
    xChannel = [tempCoordSourceShrink(:,1) tempCoordDetectorShrink(:,1)]';
    yChannel = [tempCoordSourceShrink(:,2) tempCoordDetectorShrink(:,2)]';
    zChannel = [tempCoordSourceShrink(:,3) tempCoordDetectorShrink(:,3)]';
    shortIdx =  repmat([GHandle.TempWindow.ChannelList.Data{:,5}],2,1);
    if GHandle.TempWindow.ShowInactive.Value
        longLineStyle = ':';
    else
        longLineStyle = 'none';
    end
    
    GHandle.TempWindow.Channel = plot3(xChannel(shortIdx),...
        yChannel(shortIdx),...
        zChannel(shortIdx), ...
        '-',...
        xChannel(shortIdx),...
        yChannel(shortIdx),...
        zChannel(shortIdx), ...
        longLineStyle,...
        'LineWidth', 2, ...
        'HitTest', 'off', ...
        'Color', 'k'...
        );
    
end
end



