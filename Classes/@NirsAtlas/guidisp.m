function  guidisp(Atlas, GHandle , editableField)
	dxsxEdge = 0.05;
	overunderEdge = 0.009;
	textBoxWidth = 0.3;
	textBoxHeight = 0.09;
	
	textFontSize = GHandle.Preference.Font.sizeM;
	
	idx = GHandle.Temp.idx;

	% create the figure and the editable field if is not specify
	if ~exist('editableField','var')
		editableField = '';
	end
	editableField = lower(editableField);
	
	if ~exist('GHandle','var') || isempty(GHandle)
		Handle.MainFigure = figure;
		GHandle.Main.SubPanel.Panel = uipanel('Parent',Handle.MainFigure);
	end
	
	% assign the title
	GHandle.Main.Display.SubPanel(idx).Panel.Title = 'Atlas';
	
	% id
	lowerPos = (0.65 +overunderEdge) + 2 *( 0.35 - overunderEdge)/3;
	GHandle.Main.Display.SubPanel(idx).IdTextBox = gtextbox(...      
		'Parent',GHandle.Main.Display.SubPanel(idx).Panel,...
		'TextString',Atlas.id,...
		'TitleString','ID:',...
		'FontSize',textFontSize,...
		'Units','normalized',...
		'Position',[dxsxEdge lowerPos textBoxWidth textBoxHeight]);

	
	lowerPos = (0.65 +overunderEdge) + 1 *( 0.35 - overunderEdge)/3;
	% name	
	if any(contains(editableField,'name'))
			GHandle.Main.Display.SubPanel(idx).NameEditableTextBox = getitabletext(...      
			'Parent',GHandle.Main.Display.SubPanel(idx).Panel,...
			'TextString',Atlas.name,...
			'TitleString','Name:',....
			'FontSize',textFontSize,...
			'Units','normalized',...
			'Position',[dxsxEdge lowerPos textBoxWidth textBoxHeight]);
	else
		GHandle.Main.Display.SubPanel(idx).NameTextBox = gtextbox(...      
			'Parent',GHandle.Main.Display.SubPanel(idx).Panel,...
			'TextString',Atlas.name,...
			'TitleString','Name:',...
			'FontSize',textFontSize,...
			'Units','normalized',...
			'Position',[dxsxEdge lowerPos textBoxWidth textBoxHeight]);
	end
	
	% date
	lowerPos = (0.65 +overunderEdge);
	if any(contains(editableField,'date'))
		GHandle.Main.Display.SubPanel(idx).DateEditableTextBox = getitabletext(...      
			'Parent',GHandle.Main.Display.SubPanel(idx).Panel,...
			'TextString',datestr(Atlas.date, 'dd/mm/yyyy'),...
			'TitleString','Date:',...0.40
			'FontSize',textFontSize,...
			'Units','normalized',...
			'Position',[dxsxEdge lowerPos textBoxWidth textBoxHeight]);
	else
		GHandle.Main.Display.SubPanel(idx).DateTextBox = gtextbox(...      
			'Parent',GHandle.Main.Display.SubPanel(idx).Panel,...
			'TextString',datestr(Atlas.date, 'dd/mm/yyyy'),...
			'TitleString','Date:',...
			'FontSize',textFontSize,...
			'Units','normalized',...
			'Position',[dxsxEdge lowerPos textBoxWidth textBoxHeight]);
	end
	
	% note
	lowerPos = (0.45);
	if any(contains(editableField,'note'))
		GHandle.Main.Display.SubPanel(idx).NoteEditableTextBox = getitabletext(...      
			'Parent',GHandle.Main.Display.SubPanel(idx).Panel,...
			'TextString',Atlas.note,...
			'TitleString','Note',...
			'FontSize',textFontSize,...
			'Units','normalized',...
			'Position',[dxsxEdge lowerPos textBoxWidth textBoxHeight*2]);
	else
		GHandle.Main.Display.SubPanel(idx).NoteTextBox = gtextbox(...      
			'Parent',GHandle.Main.Display.SubPanel(idx).Panel,...
			'TextString',Atlas.note,...
			'TitleString','Note:',...
			'FontSize',textFontSize,...
			'Units','normalized',...
			'Position',[dxsxEdge lowerPos textBoxWidth textBoxHeight*2]);
	end

		GHandle.Main.Display.SubPanel(idx).Axes = axes(...      
					'Parent',GHandle.Main.Display.SubPanel(idx).Panel,...
					'Units', 'normalize', ...	
					'Position',[0.45 0.05 0.50 0.90],...
					'NextPlot','add',...
					'Visible', 'off');
		set(GHandle.Main.Display.SubPanel(idx).Axes,'CameraViewAngle',get(GHandle.Main.Display.SubPanel(idx).Axes,'CameraViewAngle'));
		set(GHandle.Main.Display.SubPanel(idx).Axes,'PlotBoxAspectRatio',get(GHandle.Main.Display.SubPanel(idx).Axes,'PlotBoxAspectRatio'));
		set(GHandle.Main.Display.SubPanel(idx).Axes,'DataAspectRatio',get(GHandle.Main.Display.SubPanel(idx).Axes,'DataAspectRatio'));
		rotate3d(GHandle.Main.Display.SubPanel(idx).Axes, 'on');

		lighting(GHandle.Main.Display.SubPanel(idx).Axes,'gouraud');
		GHandle.Main.Display.SubPanel(idx).Light(1) = light('Position', [+100 0 0]);
		GHandle.Main.Display.SubPanel(idx).Light(2) = light('Position', [-100 0 0]);


		GHandle.Main.Display.SubPanel(idx).Scalp = trisurf(...
			Atlas.Scalp.face,... 
			Atlas.Scalp.node(:,1),Atlas.Scalp.node(:,2), Atlas.Scalp.node(:,3),...
			ones(size(Atlas.Scalp.node(:,3))),...
			'Parent', GHandle.Main.Display.SubPanel(idx).Axes,...
			'EdgeColor','none',...
			'FaceColor','interp',...
			'FaceAlpha',0.2);

		GHandle.Main.Display.SubPanel(idx).Gray = trisurf(...
			Atlas.GreyMatter.face,... 
			Atlas.GreyMatter.node(:,1),Atlas.GreyMatter.node(:,2), Atlas.GreyMatter.node(:,3),...
			2.*ones(size(Atlas.GreyMatter.node(:,3))),...
			'Parent', GHandle.Main.Display.SubPanel(idx).Axes,...
			'EdgeColor','none',...
			'FaceColor','interp',...
			'FaceAlpha',0.3);

		GHandle.Main.Display.SubPanel(idx).White = trisurf(...
			Atlas.WhiteMatter.face,... 
			Atlas.WhiteMatter.node(:,1),Atlas.WhiteMatter.node(:,2), Atlas.WhiteMatter.node(:,3),...
			3.*ones(size(Atlas.WhiteMatter.node(:,3))),...
			'Parent', GHandle.Main.Display.SubPanel(idx).Axes,...
			'EdgeColor','none',...
			'FaceColor','interp');

		GHandle.Main.Display.SubPanel(idx).LandMark = plot3(...
			Atlas.LandMarks.coordinates(:,1),... 
			Atlas.LandMarks.coordinates(:,2),... 
			Atlas.LandMarks.coordinates(:,3),...
			'LineStyle', 'none',...
			'Visible', 'off',...
			'Marker','.',...
			'Parent', GHandle.Main.Display.SubPanel(idx).Axes);

		GHandle.Main.Display.SubPanel(idx).LandMarkText = text(...
			GHandle.Main.Display.SubPanel(idx).Axes,...
			Atlas.LandMarks.coordinates(:,1),... 
			Atlas.LandMarks.coordinates(:,2),... 
			Atlas.LandMarks.coordinates(:,3),...
			Atlas.LandMarks.names,...
			'Visible', 'off');
		
 		GHandle.Main.Display.SubPanel(idx).LandMarkCheckBox = uicontrol(...
			'Parent',GHandle.Main.Display.SubPanel(idx).Panel,...
			'Units','normalized',...
			'Callback',{@landmarkcheckbox_callback,GHandle, idx},....
			'Position',[dxsxEdge 0.40 textBoxWidth 0.05],...
			'String','LandMarks',...
			'Style', 'checkbox'...
			);
	
		GHandle.Main.Display.SubPanel(idx).LandMarkTextCheckBox = uicontrol(...
			'Parent',GHandle.Main.Display.SubPanel(idx).Panel,...
			'Units','normalized',...
			'Callback',{@landmarktextcheckbox_callback,GHandle, idx},....
			'Position',[dxsxEdge 0.35 textBoxWidth 0.05],...
			'String','LandMarks Text',...
			'Style', 'checkbox'...
			);


		GHandle.Main.Display.SubPanel(idx).EdvListBox = uicontrol(...
			'Parent',GHandle.Main.Display.SubPanel(idx).Panel,...
			'Units','normalized',...
			'Callback',{@edvlistbox_callback,GHandle, idx},....
			'Position',[dxsxEdge overunderEdge textBoxWidth 0.3],...
			'String',{'Wite Matter','Gray Matter', 'Scalp'},...
			'Value',[1 ,2 ,3 ],...
			'Max', 3,...
			'Style', 'listbox'...
			);
end


function landmarkcheckbox_callback(~, evnt, GHandle , idx)
		
	if (evnt.Source.Value)
		GHandle.Main.Display.SubPanel(idx).LandMark.Visible = 'on';
	else
		GHandle.Main.Display.SubPanel(idx).LandMark.Visible = 'off';
	end

end


function landmarktextcheckbox_callback(~, evnt, GHandle , idx)
	nText = length (GHandle.Main.Display.SubPanel(idx).LandMarkText);
	if (evnt.Source.Value)
		for iText = 1 : nText
			GHandle.Main.Display.SubPanel(idx).LandMarkText(iText).Visible = 'on';
		end
	else
		for iText = 1 : nText
			GHandle.Main.Display.SubPanel(idx).LandMarkText(iText).Visible = 'off';
		end
	end

end

function edvlistbox_callback(~, evnt, GHandle , idx)
nameList = {'White', 'Gray',  'Scalp'};
nameIdx = evnt.Source.Value;
	if (length(nameIdx) == 1)
		GHandle.Main.Display.SubPanel(idx).Gray.Visible = 'off';
		GHandle.Main.Display.SubPanel(idx).White.Visible = 'off';
		GHandle.Main.Display.SubPanel(idx).Scalp.Visible = 'off';
		GHandle.Main.Display.SubPanel(idx).(nameList{nameIdx}).Visible = 'on';
		GHandle.Main.Display.SubPanel(idx).(nameList{nameIdx}).FaceAlpha = 1;
	elseif	(length(nameIdx) == 2)
		GHandle.Main.Display.SubPanel(idx).Gray.Visible = 'off';
		GHandle.Main.Display.SubPanel(idx).White.Visible = 'off';
		GHandle.Main.Display.SubPanel(idx).Scalp.Visible = 'off';
		GHandle.Main.Display.SubPanel(idx).(nameList{nameIdx(1)}).Visible = 'on';
		GHandle.Main.Display.SubPanel(idx).(nameList{nameIdx(2)}).Visible = 'on';
		GHandle.Main.Display.SubPanel(idx).(nameList{nameIdx(1)}).FaceAlpha = '1';
		GHandle.Main.Display.SubPanel(idx).(nameList{nameIdx(2)}).FaceAlpha = '0.5';
	else		
		GHandle.Main.Display.SubPanel(idx).Gray.Visible = 'on';
		GHandle.Main.Display.SubPanel(idx).White.Visible = 'on';
		GHandle.Main.Display.SubPanel(idx).Scalp.Visible = 'on';		
		GHandle.Main.Display.SubPanel(idx).Gray.FaceAlpha = '0.3';
		GHandle.Main.Display.SubPanel(idx).White.FaceAlpha = '1';
		GHandle.Main.Display.SubPanel(idx).Scalp.FaceAlpha = '0.2';
	end

end



